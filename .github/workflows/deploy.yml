name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # First, build the project
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test
      - name: Build site
        run: |
          # Create distribution directories
          rm -rf dist
          mkdir -p dist/song dist/assets

          # Create config.js from the example and secrets
          # This is a more robust way to handle configuration
          cp config.example.js dist/config.js
          sed -i "s|<SUPABASE_URL>|${{ secrets.SUPABASE_URL }}|g" dist/config.js
          sed -i "s|<PUBLIC_ANON_KEY>|${{ secrets.SUPABASE_KEY }}|g" dist/config.js
          
          # Copy all other necessary files
          cp index.html style.css script-index.js songs.json theme-switcher.js dist/
          cp song/song.html song/script-song.js dist/song/
          cp -r assets/. dist/assets/
          touch dist/.nojekyll
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact for deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  # Second, deploy the project
  deploy:
    # This job requires the build job to succeed first
    needs: build
    
    # Configure the deployment environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
