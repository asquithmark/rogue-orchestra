name: Deploy

on:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies and run tests
        run: |
          npm ci
          npm test

      - name: Build site
        run: |
          # Create the distribution directory structure
          rm -rf dist
          mkdir -p dist/song dist/assets

          # Create the config.js file from repository secrets
          echo "export const SUPABASE_URL = '${{ secrets.SUPABASE_URL }}';" > dist/config.js
          echo "export const SUPABASE_KEY = '${{ secrets.SUPABASE_KEY }}';" >> dist/config.js

          # Copy root files into the dist folder
          cp index.html style.css script-index.js songs.json theme-switcher.js dist/

          # Copy files for the song page
          cp song/song.html song/script-song.js dist/song/

          # Copy all assets (images, audio)
          cp -r assets/. dist/assets/

          # Create .nojekyll file for GitHub Pages
          touch dist/.nojekyll

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v2
